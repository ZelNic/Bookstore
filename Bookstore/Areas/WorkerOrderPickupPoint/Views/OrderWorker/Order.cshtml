@inject ApplicationDbContext DB
@{
    var db = DB;
}

@model OrderVM




<div class="container">
    <div>
        <h3>@ViewBag.operation</h3>
    </div>
    <div>
        <form class="d-flex" method="post" asp-area="WorkerOrderPickupPoint" asp-controller="OrderWorker" asp-action="Order" asp-route-operation="@ViewBag.operation">
            <input class="form-control me-sm-1 bg-light" type="search" pattern="[0-9]+" name="searchOrderId" placeholder="Введите номер заказа">
            <button class="btn btn-dark my-4 my-sm-0" type="submit"><i class="bi bi-search"></i></button>
        </form>
    </div>
</div>



@if (Model != null)
{
    <div class="container m-4">

        <div>
            <h3>@Model.OperationName</h3>
        </div>


        <div class="form-group border border-1 rounded rounded-1 p-4">
            <div class="d-inline-flex align-items-center">
                <span class="mr-3">Номер заказа: </span>
                <div class="rouden rounded-1 text-bg-primary m-1">
                    @Model.Order.OrderId
                </div>
            </div>
            <div class="d-inline-flex align-items-center">
                <span class="mr-3">Статус заказа: </span>

                @{
                    string colorStatus = "";

                    switch (Model.Order.OrderStatus)
                    {
                        case SD.StatusPending_0:
                            colorStatus = "secondary";
                            break;
                        case SD.StatusApproved_1:
                            colorStatus = "info";
                            break;
                        case SD.StatusInProcess_2:
                            colorStatus = "warning";
                            break;
                        case SD.StatusShipped_3:
                            colorStatus = "primary";
                            break;
                        case SD.StatusDelivered_4:
                            colorStatus = "success";
                            break;
                        case SD.StatusCancelled_5:
                            colorStatus = "danger";
                            break;
                        case SD.StatusRefunded_6:
                            colorStatus = "dark";
                            break;
                    }
                }
                <div class="rouden rounded-1 bg-@colorStatus m-1">@Model.Order.OrderStatus</div>
            </div>


            <div>
                <label>
                    Дата и время заказа:
                    @Model.Order.PurchaseDate
                    по МСК
                </label>
            </div>

            @{
                IEnumerable<ProductData>
                productsData = JsonConvert.DeserializeObject<IEnumerable<ProductData>>(@Model.Order.ProductData);
            }
            @{
                int countProduct = 0;
                int sumPrice = 0;
            }

            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">Id</th>
                        <th scope="col">Название</th>
                        <th scope="col">Цена</th>
                        <th scope="col">Количество</th>
                    </tr>
                </thead>
                @foreach (ProductData product in productsData)
                {
                    <tbody class="table-group-divider">
                        <tr>
                            <td>@product.ProdId</td>
                            <td>
                                <a class="" asp-area="Customer" asp-controller="Home" asp-action="Details" asp-route-productId="@product.ProdId">
                                    @db.Products.Find(product.ProdId).Title
                                </a>
                            </td>
                            <td>@product.Price</td>
                            <td>@product.Count</td>
                            @{
                                countProduct += product.Count;
                                sumPrice += product.Count * product.Price;
                            }
                        </tr>
                    </tbody>
                }
            </table>
            <div>
                <label>Количество товаров: @countProduct</label>
                <label class="m-3">Стоимость: @sumPrice</label>
            </div>
            <div class="form-group">
                <label>Оплачено:</label>
                <label>@Model.Order.PurchaseAmount</label>
            </div>
            <div>
                Доставка:
                @if (@Model.Order.isCourierDelivery == true)
                {
                    <label> Курьером</label>
                    <div class="form-group">
                        Адрес доставки:
                        @Model.Order.DeliveryAddress
                    </div>
                }
                else
                {
                    <label> В пункт выдачи</label>
                }
                <div class="form-group">
                    Данные получателя:
                    @Model.Order.ReceiverName
                    @Model.Order.RecipientsLastName
                    @Model.Order.PhoneNumber
                </div>
            </div>
            <div>
                @if (Model.Order.OrderStatus != SD.StatusDelivered_4)
                {
                    @switch (Model.OperationName)
                    {
                        case SD.AcceptOrder:
                            <div>
                                <div>
                                    <button onclick="SendNotification('/WorkerOrderPickupPoint/NotificationWorker/Send?notificationCode=5&orderId=@Model.Order.OrderId')"
                                            class="btn btn-success mt-2">
                                        Подтвердить прибытие заказа в пункт выдачи.*
                                    </button>
                                </div>
                                <h8 class="opacity-50">*отправка уведомления клиенту о прибитые посылки</h8>
                            </div>
                            break;
                        case SD.IssueOrder:
                            <div>
                                <div>
                                    <button onclick="SendConfirmationCode('/WorkerOrderPickupPoint/OrderWorker/SendConfirmationCode?orderId=@Model.Order.OrderId')"
                                            class="btn btn-success mt-2">
                                        Отправить код подтверждения
                                    </button>
                                </div>
                                <div>
                                    <button onclick="EnterConfirmationCode('/WorkerOrderPickupPoint/OrderWorker/CheckVerificationCode?orderId=@Model.Order.OrderId')"
                                            class="btn btn-success mt-2">
                                        Ввести код подтверждения
                                    </button>
                                </div>
                            </div>
                            break;
                        default:
                            break;
                    }
                }
            </div>
        </div>
        <hr class="mt-5 mb-5" />
    </div>
}




@section Scripts{
    <script src="~/js/SendNotification.js"></script>
    <script src="~/js/SendСonfirmationСode.js"></script>
    }


